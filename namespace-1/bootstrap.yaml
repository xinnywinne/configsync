# Keep roughly in sync with https://source.corp.google.com/piper///depot/google3/cloud/hosted/krmapihosting/clh/terraform/k8s/bootstrap.yml

apiVersion: v1
kind: Namespace
metadata:
  name: krmapihosting-system
---
# This config is used by the bootstrap deployment and its scripts.
# The data are injected as env variables.
apiVersion: v1
kind: ConfigMap
metadata:
    name: bootstrap-config
    namespace: krmapihosting-system
data:
    ACM_GIT_ENDPOINT: ""
    ACM_GIT_BRANCH: ""
    ACM_GIT_SECRETTYPE: ""
    ACM_GIT_POLICYDIR: ""
    ACP_INSTALL_GIT: "false"
    ACP_INSTALL_MONITORING: "true"
    CONFIG_CONNECTOR_RESOURCE_PROJECT: "${PROJECT_ID}"
    DATA_PLANE_SA: "todo@${PROJECT_ID}.iam.gserviceaccount.com"
    #RUNTIME: "${runtime}"
    ANTHOS_SSE_BUNDLE_ENABLED: "false"
    YAKIMA_BUNDLE_ENABLED: "false"
    CONFIG_CONTROLLER_BUNDLE_ENABLED: "true"
    # TODO(b/169520624): Remove when the feature is no longer gated in
    # boostrap
    INSTALL_CC: "true"
    # TODO(b/186541597): remove when we don't need the flag to be compatible
    # with both classic GKE and Autopilot
    GATEKEEPER_STANDALONE_DISABLED: "false"
---
# Bootstrap SA
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bootstrap-robot
  namespace: krmapihosting-system
---
# Give cluster-admin access to the bootstrap-robot account
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: bootstrap-robot-rbac
subjects:
  - kind: ServiceAccount
    name: bootstrap-robot
    namespace: krmapihosting-system
roleRef:
  kind: ClusterRole
  # TODO(maxrd): Determine if a role with less privileges would work.
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bootstrap
  namespace: krmapihosting-system
  labels:
    app: bootstrap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bootstrap
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8888"
        krmapihosting.gke.io/component-name: system
      labels:
        app: bootstrap
    spec:
      serviceAccountName: bootstrap-robot
      containers:
      - name: bootstrap
        image: gcr.io/${PROJECT_ID}/${USER}/bootstrap:latest
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: bootstrap-config
        env:
          - name: GIT_KEY
            valueFrom:
              secretKeyRef:
                name: git-key
                key: private
                optional: true
        resources:
          limits:
            # CPU is a compressible resource, we should not set a limit on GKE
            # (We have to on AutoGKE)
            # cpu: "250m"
            memory: "2048Mi"
          requests:
            cpu: "250m"
            memory: "2048Mi"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
